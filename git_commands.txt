Git commands text


User@WIN-F21VEI0I01P MINGW64 ~
$ cd d:

User@WIN-F21VEI0I01P MINGW64 /d
$ mkdir git

User@WIN-F21VEI0I01P MINGW64 /d
$ cd git

User@WIN-F21VEI0I01P MINGW64 /d/git
$ git init
Initialized empty Git repository in D:/git/.git/

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git status
On branch main

No commits yet

nothing to commit (create/copy files and use "git add" to track)

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git add .

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git status
On branch main

No commits yet

nothing to commit (create/copy files and use "git add" to track)

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git commit -m "One commit"
On branch main

Initial commit

nothing to commit (create/copy files and use "git add" to track)

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ dir

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ dir
test.txt

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git status
On branch main

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test.txt

nothing added to commit but untracked files present (use "git add" to track)

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git add .

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git status
On branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   test.txt


User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git commit -m "Two commit"
[main (root-commit) a342f23] Two commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test.txt

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git checkout -b dev
Switched to a new branch 'dev'

User@WIN-F21VEI0I01P MINGW64 /d/git (dev)
$ ^C

User@WIN-F21VEI0I01P MINGW64 /d/git (dev)
$ git checkout main
Switched to branch 'main'

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git branch
  dev
* main

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git checkout dev
Switched to branch 'dev'

User@WIN-F21VEI0I01P MINGW64 /d/git (dev)
$ notepad dev.txt

User@WIN-F21VEI0I01P MINGW64 /d/git (dev)
$ dir
dev.txt  test.txt

User@WIN-F21VEI0I01P MINGW64 /d/git (dev)
$ git add .

User@WIN-F21VEI0I01P MINGW64 /d/git (dev)
$ git commit -m "dev"
[dev 81ddfc6] dev
 1 file changed, 1 insertion(+)
 create mode 100644 dev.txt

User@WIN-F21VEI0I01P MINGW64 /d/git (dev)
$ git checkout main
Switched to branch 'main'

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ dir
test.txt

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git marge dev
git: 'marge' is not a git command. See 'git --help'.

The most similar command is
        merge

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git merge dev
Updating a342f23..81ddfc6
Fast-forward
 dev.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 dev.txt

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ dir
dev.txt  test.txt

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git remote -v

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git remote add test http://get.com

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git remote -v
test    http://get.com (fetch)
test    http://get.com (push)

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git remote show origin
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git rename test pd
git: 'rename' is not a git command. See 'git --help'.

The most similar command is
        rebase

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git remote rename test pd

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git remote -v
pd      http://get.com (fetch)
pd      http://get.com (push)

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git remote rm pd

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$ git remote -v

User@WIN-F21VEI0I01P MINGW64 /d/git (main)
$
